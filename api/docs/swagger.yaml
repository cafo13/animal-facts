basePath: /api/v1
definitions:
  database.Fact:
    properties:
      Approved:
        type: boolean
      Category:
        type: string
      Source:
        type: string
      Text:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      updatedAt:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  router.ErrorResponse:
    properties:
      error: {}
    type: object
  router.LoginResponse:
    properties:
      token:
        type: string
    type: object
  router.MessageResponse:
    properties:
      message:
        type: string
    type: object
host: https://animalfacts.app
info:
  contact:
    name: Animal Facts API
    url: https://animalfacts.app
  description: Awesome facts about animals.
  license:
    name: MIT
    url: https://github.com/cafo13/animal-facts/blob/main/LICENSE
  title: Animal Facts API
  version: 0.0.1
paths:
  /fact:
    get:
      description: Getting a random animal fact
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Fact'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/router.ErrorResponse'
      summary: Get random animal fact
      tags:
      - facts
    post:
      consumes:
      - application/json
      description: Adding an animal fact
      parameters:
      - description: a new fact
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/database.Fact'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/database.Fact'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/router.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/router.ErrorResponse'
      summary: Add a new animal fact
      tags:
      - facts
  /fact/:id:
    delete:
      description: Deleting an animal fact
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/router.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/router.ErrorResponse'
      summary: Delete an animal fact
      tags:
      - facts
    get:
      description: Getting an animal fact by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Fact'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/router.ErrorResponse'
      summary: Get animal fact by id
      tags:
      - facts
    put:
      consumes:
      - application/json
      description: Updating an animal fact
      parameters:
      - description: an updated fact
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Fact'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/router.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/router.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/router.ErrorResponse'
      summary: Update an existing animal fact
      tags:
      - facts
  /healthy:
    get:
      description: Checking the health of the API
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get health status
      tags:
      - general
  /login:
    post:
      description: Login endpoint for the endpoints of the API, that require auth
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/router.LoginResponse'
      summary: Login endpoint
      tags:
      - general
swagger: "2.0"
